                 -1   $MODDE0CV
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER 0 - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER 0 - HIGH BYTE
0000             24   DPL1   DATA  084H  ;DATA POINTER 1 - LOW BYTE
0000             25   DPH1   DATA  085H  ;DATA POINTER 1 - HIGH BYTE
0000             26   DPS    DATA  086H  ;DATA POINTER SELECT. DPH1, DPL1 active when DPS.0=1
0000             27   PCON   DATA  087H  ;POWER CONTROL
0000             28   TCON   DATA  088H  ;TIMER CONTROL
0000             29   TMOD   DATA  089H  ;TIMER MODE
0000             30   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             31   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             32   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             33   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             34   P1     DATA  090H  ;PORT 1
0000             35   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             36   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             37   P2     DATA  0A0H  ;PORT 2
0000             38   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             39   P3     DATA  0B0H  ;PORT 3
0000             40   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             41   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             42   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             43   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             44   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             45   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             46   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             47   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             48   ACC    DATA  0E0H  ;ACCUMULATOR
0000             49   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             50   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             51   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             52   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             53   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             54   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             55   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             56   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             57   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             58   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             59   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             60   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             61   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             62   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             63   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             64   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             65   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             66   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             67   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             68   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             69   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             70   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             71   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             72   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             73   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             74   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             75   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             76   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             77   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             78   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             79   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             80   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             81   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             82   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             83   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             84   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             85   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             86   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             87   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             88   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             89   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             90   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             91   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             92   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             93   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             94   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             95   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             96   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             97   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             98   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             99   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000            100   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000            101   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000            102   
0000            103   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            104   ; we have the following extra registers:
0000            105   
0000            106   HEX0   DATA  091H ; Zero turns the segment on
0000            107   HEX1   DATA  092H ; 
0000            108   HEX2   DATA  093H ; 
0000            109   HEX3   DATA  094H ; 
0000            110   HEX4   DATA  08EH ;
0000            111   HEX5   DATA  08FH ;
0000            112   HEX6   DATA  096H ;
0000            113   HEX7   DATA  097H ;
0000            114   
0000            115   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            116   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            117   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            118   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            119   
0000            120   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            121   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            122   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            123   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            124   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            125   SWB    DATA  095H ; Switches SW8 to SW15
0000            126   SWC    DATA  09EH ; Switches SW16 and SW17
0000            127   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            128   
0000            129   LCD_CMD   DATA 0D8H ;
0000            130   LCD_DATA  DATA 0D9H ;
0000            131   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            132   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            133   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            134   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            135   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            136   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            137   
0000            138   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            139   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            140   ; bit 1: FL_WE_N
0000            141   ; bit 2: FL_OE_N
0000            142   ; bit 3: FL_CE_N
0000            143   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            144   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            145   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            146   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            147   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            148   
0000              2   
0000              3   ; ------------------
0000              4   ; 7seg display
0000              5   ; These are the inputs to the 7seg for a given binary
0000              6   ;                -6543210
0000              7   ;                -gfedcba
0000              8   n0 equ  01000000b ;0
0000              9   n1 equ  01111001b ;1
0000             10   n2 equ  00100100b ;2
0000             11   n3 equ  00110000b ;3
0000             12   n4 equ  00011001b ;4
0000             13   n5 equ  00010010b ;5
0000             14   n6 equ  00000010b ;6
0000             15   n7 equ  01111000b ;7
0000             16   n8 equ  00000000b ;8
0000             17   n9 equ  00011000b ;9
0000             18   L_h equ 00001001b ;H
0000             19   L_e equ 00000110b ;E
0000             20   L_l equ 01000111b ;L
0000             21   L_c equ 01000110b ;C
0000             22   L_p equ 00001100b ;P
0000             23   L_n equ 01001000b ;N
0000             24   ; ------------------
0000             25   
0000             26   ; Enter your SN here
0000             27   L_1 equ n1
0000             28   L_2 equ n2
0000             29   L_3 equ n3
0000             30   L_4 equ n4
0000             31   L_5 equ n5
0000             32   L_6 equ n6
0000             33   L_7 equ n7
0000             34   L_8 equ n8
0000             35   BLANK equ 01111111b
0000             36   DASH equ 00111111b
0000             37   
0000             38   ; Assembler load address, jump to init
0000             39   org 0
0000 020010      40            ljmp init
0003             41   
0003             42   ; Wait function, waits for ~0.5 secs
0003             43   wait_05:
0003 7A5A        44       mov R2, #90  ; 90 is 5AH
0005 79FA        45   L3: mov R1, #250 ; 250 is FAH 
0007 78FA        46   L2: mov R0, #250
0009 D8FE        47   L1: djnz R0, L1  ; 3 machine cycles-> 3*30ns*250=22.5us
000B D9FA        48       djnz R1, L2  ; 22.5us*250=5.625ms
000D DAF6        49       djnz R2, L3  ; 5.625ms*90=0.506s (approximately)
000F 22          50            ret
0010             51   
0010             52   ; Initialize stat + clear LEDs
0010             53   init:
0010 75817F      54            mov SP, #0x7f ; Initialize the stack
0013 75E800      55            mov LEDRA, #0
0016 759500      56            mov LEDRB, #0
0019             57            
0019             58   main_loop:
0019             59   
0019             60            ; Store all switch bits in A and mask all except the last 3 to compare
0019 E5E8        61            mov A, SWA 
001B 5407        62            anl A, #00000111b
001D             63            ; Compare and jump to each loop as required
001D B40005      64                    cjne A, #00000000b, disp_1l
0020 02005D      65                            LJMP disp_0
0023 80F4        66                            SJMP main_loop
0025 B40105      67   disp_1l: cjne A, #00000001b, disp_2l
0028 020072      68                            LJMP disp_1
002B 80EC        69                            SJMP main_loop
002D B40205      70   disp_2l: cjne A, #00000010b, disp_3l
0030 020087      71                            LJMP disp_2
0033 80E4        72                            SJMP main_loop
0035 B40305      73   disp_3l: cjne A, #00000011b, disp_4l
0038 02008A      74                            LJMP disp_3
003B 80DC        75                            SJMP main_loop
003D B40405      76   disp_4l: cjne A, #00000100b, disp_5l
0040 02008D      77                            LJMP disp_4
0043 80D4        78                            SJMP main_loop
0045 B40505      79   disp_5l: cjne A, #00000101b, disp_6l
0048 0200BA      80                            LJMP disp_5
004B 80CC        81                            SJMP main_loop
004D B40605      82   disp_6l: cjne A, #00000110b, disp_7l
0050 0200F6      83                            LJMP disp_6
0053 80C4        84                            SJMP main_loop
0055 B407C1      85   disp_7l: cjne A, #00000111b, main_loop
0058 020138      86                            LJMP disp_7
005B 80BC        87                            SJMP main_loop
005D             88   
005D             89   
005D             90   ; First 6 SN
005D             91   disp_0:
005D 758F79      92            mov HEX5, #L_1
0060 758E24      93            mov HEX4, #L_2
0063 759430      94            mov HEX3, #L_3
0066 759319      95            mov HEX2, #L_4
0069 759212      96            mov HEX1, #L_5
006C 759102      97            mov HEX0, #L_6
006F 020019      98            LJMP main_loop
0072             99   
0072            100   ; Last 2 SN
0072            101   disp_1:
0072 758F7F     102            mov HEX5, #BLANK
0075 758E7F     103            mov HEX4, #BLANK
0078 75947F     104            mov HEX3, #BLANK
007B 75937F     105            mov HEX2, #BLANK
007E 759278     106            mov HEX1, #L_7
0081 759100     107            mov HEX0, #L_8
0084 020019     108            LJMP main_loop
0087            109   
0087            110   ; Scroll to the left
0087            111   disp_2:
0087            112            ; Abuse pointers        
0087 020019     113            LJMP main_loop
008A            114   
008A            115   ; Scroll to the right
008A            116   disp_3:
008A 020019     117            LJMP main_loop
008D            118   
008D            119   ;Blink last 6
008D            120   disp_4:
008D 758F30     121            mov HEX5, #L_3
0090 758E19     122            mov HEX4, #L_4
0093 759412     123            mov HEX3, #L_5
0096 759302     124            mov HEX2, #L_6
0099 759278     125            mov HEX1, #L_7
009C 759100     126            mov HEX0, #L_8
009F 120003     127            lcall wait_05
00A2 758F7F     128            mov HEX5, #BLANK
00A5 758E7F     129            mov HEX4, #BLANK
00A8 75947F     130            mov HEX3, #BLANK
00AB 75937F     131            mov HEX2, #BLANK
00AE 75927F     132            mov HEX1, #BLANK
00B1 75917F     133            mov HEX0, #BLANK
00B4 120003     134            lcall wait_05
00B7 020019     135            LJMP main_loop
00BA            136   
00BA            137   ;make first 6 display one at a time
00BA            138   disp_5:
00BA 758F7F     139            mov HEX5, #BLANK
00BD 758E7F     140            mov HEX4, #BLANK
00C0 75947F     141            mov HEX3, #BLANK
00C3 75937F     142            mov HEX2, #BLANK
00C6 75927F     143            mov HEX1, #BLANK
00C9 75917F     144            mov HEX0, #BLANK
00CC 120003     145            lcall wait_05
00CF 758F79     146            mov HEX5, #L_1
00D2 120003     147            lcall wait_05
00D5 758E24     148            mov HEX4, #L_2
00D8 120003     149            lcall wait_05
00DB 759430     150            mov HEX3, #L_3
00DE 120003     151            lcall wait_05
00E1 759319     152            mov HEX2, #L_4
00E4 120003     153            lcall wait_05
00E7 759212     154            mov HEX1, #L_5
00EA 120003     155            lcall wait_05
00ED 759102     156            mov HEX0, #L_6
00F0 120003     157            lcall wait_05
00F3 020019     158            LJMP main_loop
00F6            159   
00F6            160   ; display hello, then first 6, then cpn312
00F6            161   disp_6:
00F6 758F09     162            mov HEX5, #L_h
00F9 758E06     163            mov HEX4, #L_e
00FC 759447     164            mov HEX3, #L_l
00FF 759347     165            mov HEX2, #L_l
0102 759240     166            mov HEX1, #n0
0105 75917F     167            mov HEX0, #BLANK
0108 120003     168            lcall wait_05
010B 758F79     169            mov HEX5, #L_1
010E 758E24     170            mov HEX4, #L_2
0111 759430     171            mov HEX3, #L_3
0114 759319     172            mov HEX2, #L_4
0117 759212     173            mov HEX1, #L_5
011A 759102     174            mov HEX0, #L_6
011D 120003     175            lcall wait_05
0120 758F46     176            mov HEX5, #L_c
0123 758E0C     177            mov HEX4, #L_p
0126 759448     178            mov HEX3, #L_n
0129 759330     179            mov HEX2, #L_3
012C 759279     180            mov HEX1, #L_1
012F 759124     181            mov HEX0, #L_2
0132 120003     182            lcall wait_05
0135 020019     183            LJMP main_loop
0138            184   
0138            185   ; Be creative
0138            186   disp_7:
0138 020019     187            LJMP main_loop
013B            188   
013B            189   EN
